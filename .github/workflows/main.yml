name: Deploy to VPS

on:
  push:
    branches:
      - main  # Triggers the action on a push to the "main" branch

jobs:
  deploy:
    runs-on: ubuntu-latest  # Runs the job on the latest version of Ubuntu

    steps:
      # Step 1: Checkout the source code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Copy files to the server via SSH
      - name: Copy files via SSH
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "."
          target: "/~/CounterPro"

      # Step 3: Retrieve the current version from the README file
      - name: Retrieve current version from readme.md
        id: get_version
        run: |
          version=$(grep -Po 'Current Version: `\K[0-9]+\.[0-9]+\.[0-9]+' readme.md)
          echo "VERSION=$version" >> $GITHUB_ENV

      # Step 4: Create the configuration file for the bot on the VPS
      - name: Create config file on VPS for Bot
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo 'module.exports = {
                    token: "${{ secrets.BOT_TOKEN }}",
                    applicationClientId: "${{ secrets.CLIENT_ID }}",
                    databaseHost: "${{ secrets.DB_HOST }}",
                    databaseUser: "${{ secrets.DB_USER }}",
                    databasePassword: "${{ secrets.DB_PASSWORD }}",
                    databaseName: "${{ secrets.DB_NAME }}",
                    databasePort: 3306,
                    supportServerInvite: "https://discord.gg/u6w8HuzzgX",
                    currentVersion: "${{ env.VERSION }}"
                }' > /~/CounterPro/application/config.js

      # Step 5: Create the .env file for Laravel on the VPS
      - name: Create .env file on VPS for Laravel
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo 'APP_NAME="CounterPro"
            APP_ENV=local
            APP_KEY=${{ secrets.APP_KEY }}
            APP_DEBUG=true
            APP_URL=http://localhost
            LOG_CHANNEL=stack
            DB_CONNECTION=mysql
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=3306
            DB_DATABASE=${{ secrets.DB_NAME }}
            DB_USERNAME=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            CACHE_DRIVER=file
            SESSION_DRIVER=file
            QUEUE_CONNECTION=sync
            ' > /~/CounterPro/website/.env

      # Step 6: Restart Docker containers on the VPS and clean up unused images
      - name: Restart Docker containers
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /~/CounterPro/
            docker-compose down
            docker-compose up -d --build
            docker image prune -af  # Removes unused Docker images
